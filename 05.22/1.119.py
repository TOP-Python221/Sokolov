# ИСПРАВИТЬ: имена должны быть значащими — что такое s?
s = ['0']
while n := input():
    # ИСПРАВИТЬ: конкатенация списка почти всегда быстрее, чем метод append(), поэтому последний мы используем только в тех случаях, когда нам важно менять объект не пересоздавая его
    s.append(n)

# КОММЕНТАРИЙ: лучше инициализировать таким значением, которое точно не сможет быть продублировано во время заполнения списка: например, None
# КОММЕНТАРИЙ: также, можно просто проверить длину списка — это и есть конечная цель в данном случае
if s != ['0']:
    s.remove('0')
    a = sum(map(float, s)) / len(s)
    print(f'\nСреднее значение: {a}'
          # КОММЕНТАРИЙ: ура, наконец-то представления списков
          f'\nНиже среднего: {[int(i) for i in s if float(i) < a]}'
          f'\nРавный среднему: {[int(i) for i in s if float(i) == a]}'
          f'\nВыше среднего: {[int(i) for i in s if float(i) > a]}')


# ДОБАВИТЬ: примеры выполнения скрипта в закомментированном виде под меткой tests
# tests:


# ИТОГ: хорошо! — 4/4
